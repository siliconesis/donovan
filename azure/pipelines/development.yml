# Development Pipeline
name: $(Version)-$(Version.Prerelease)+$(Date:yyyyMMdd).$(Rev:r)

trigger:
  branches:
    include:
      - '*'

pr:
  branches:
    include:
      - master

variables:
- group: 'Pipeline.Development'
- group: 'Azure.Development'

pool:
  vmImage: 'windows-latest'

stages:

- stage: 'Build'
  displayName: 'Build'

  jobs:

  - job: 'BuildPackage'
    displayName: 'Build & Package'

    steps:

    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        projects: '$(Solution)'

    - task: VSBuild@1
      displayName: 'Build Solution'
      inputs:
        solution: '$(Solution)'
        platform: '$(Solution.Platform)'
        configuration: '$(Solution.Configuration)'

    # Identity Web Site
    - task: DotNetCoreCLI@2
      displayName: 'Package Identity Web Site'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/Donovan.Server.Web.Identity.csproj'
        zipAfterPublish: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Identity Web Site'
      inputs:
        targetPath: '$(Build.SourcesDirectory)/src/Donovan.Server.Web.Identity/bin/$(Solution.Configuration)/netcoreapp3.1/publish.zip'
        artifactName: '$(Artifact.IdentityWebSite)'

    # Game Web API
    - task: DotNetCoreCLI@2
      displayName: 'Package Game Web API'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/Donovan.Server.Web.Api.csproj'
        zipAfterPublish: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Game Web API'
      inputs:
        targetPath: '$(Build.SourcesDirectory)/src/Donovan.Server.Web.Api/bin/$(Solution.Configuration)/netcoreapp3.1/publish.zip'
        artifactName: '$(Artifact.GameWebApi)'

    # Game Web Site
    - task: DotNetCoreCLI@2
      displayName: 'Package Game Web Site'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/Donovan.Server.Web.csproj'
        zipAfterPublish: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Game Web Site'
      inputs:
        targetPath: '$(Build.SourcesDirectory)/src/Donovan.Server.Web/bin/$(Solution.Configuration)/netcoreapp3.1/publish.zip'
        artifactName: '$(Artifact.GameWebSite)'

    # Azure Resource Manager Templates
    - task: PublishPipelineArtifact@1
      displayName: 'Publish ARM Templates'
      inputs:
        targetPath: '$(Build.SourcesDirectory)/azure/templates'
        artifactName: '$(Artifact.ArmTemplates)'

- stage: 'Deploy'
  displayName: 'Deploy'

  jobs:

  - deployment: 'DeployApplication'
    displayName: 'Deploy Application'
    environment: '$(Environment)'

    strategy:
      runOnce:
        deploy:

          steps:

          # Hosting Resources
          - task: AzureResourceGroupDeployment@2
            displayName: 'Deploy Hosting Resources'
            inputs:
              azureSubscription: '$(Azure.Subscription)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(Resources.HostingResourceGroupName)'
              location: '$(Azure.Location)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/$(Artifact.ArmTemplates)/hosting.json'
              csmParametersFile: ''
              overrideParameters: '
                -environment "$(Environment)"
                -sourceBranchName "$(Build.SourceBranchName)"
                -sourceCommitId "$(Build.SourceVersion)"
                -hostingResourceName "$(Resources.HostingResourceName)"'
              deploymentMode: 'Incremental'

          # Identity Resources
          - task: AzureResourceGroupDeployment@2
            displayName: 'Deploy Identity Resources'
            inputs:
              azureSubscription: '$(Azure.Subscription)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(Resources.IdentityResourceGroupName)'
              location: '$(Azure.Location)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/$(Artifact.ArmTemplates)/identity.json'
              csmParametersFile: ''
              overrideParameters: '
                -environment "$(Environment)"
                -sourceBranchName "$(Build.SourceBranchName)"
                -sourceCommitId "$(Build.SourceVersion)"
                -identityDatabaseResourceName "$(Resources.IdentityDatabaseResourceName)"
                -identityWebSiteHostingResourceGroupName "$(Resources.HostingResourceGroupName)"
                -identityWebSiteHostingResourceName "$(Resources.HostingResourceName)"
                -identityWebSiteResourceName "$(Resources.IdentityWebSiteResourceName)"'
              deploymentMode: 'Incremental'
  
          # Identity Web Site
          - task: AzureWebApp@1
            displayName: 'Deploy Identity Web Site'
            inputs:
              azureSubscription: '$(Azure.Subscription)'
              appType: 'webApp'
              appName: '$(Resources.IdentityWebSiteResourceName)'
              package: '$(Pipeline.Workspace)/$(Artifact.IdentityWebSite)/publish.zip'
              deploymentMethod: 'zipDeploy'

          # Game Resources
          - task: AzureResourceGroupDeployment@2
            displayName: 'Deploy Game Resources'
            inputs:
              azureSubscription: '$(Azure.Subscription)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(Resources.GameResourceGroupName)'
              location: '$(Azure.Location)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/$(Artifact.ArmTemplates)/game.json'
              csmParametersFile: ''
              overrideParameters: '
                -environment "$(Environment)"
                -sourceBranchName "$(Build.SourceBranchName)"
                -sourceCommitId "$(Build.SourceVersion)"
                -gameDatabaseResourceName "$(Resources.GameDatabaseResourceName)"
                -gameWebApiHostingResourceGroupName "$(Resources.HostingResourceGroupName)"
                -gameWebApiHostingResourceName "$(Resources.HostingResourceName)"
                -gameWebApiResourceName "$(Resources.GameWebApiResourceName)"
                -gameWebSiteHostingResourceGroupName "$(Resources.HostingResourceGroupName)"
                -gameWebSiteHostingResourceName "$(Resources.HostingResourceName)"
                -gameWebSiteResourceName "$(Resources.GameWebSiteResourceName)"'
              deploymentMode: 'Incremental'

          # Game Web API
          - task: AzureWebApp@1
            displayName: 'Deploy Game Web API'
            inputs:
              azureSubscription: '$(Azure.Subscription)'
              appType: 'webApp'
              appName: '$(Resources.GameWebApiResourceName)'
              package: '$(Pipeline.Workspace)/$(Artifact.GameWebApi)/publish.zip'
              deploymentMethod: 'zipDeploy'

          # Game Web Site
          - task: AzureWebApp@1
            displayName: 'Deploy Game Web Site'
            inputs:
              azureSubscription: '$(Azure.Subscription)'
              appType: 'webApp'
              appName: '$(Resources.GameWebSiteResourceName)'
              package: '$(Pipeline.Workspace)/$(Artifact.GameWebSite)/publish.zip'
              deploymentMethod: 'zipDeploy'

- stage: 'Configure'
  displayName: 'Configure'

  variables:
  - group: 'AppSettings.Development'

  jobs:

  - job: 'ConfigureIdentity'
    displayName: 'Configure Identity'

    steps:
    - checkout: none

  - job: 'ConfigureGame'
    displayName: 'Configure Game'

    steps:
    - checkout: none

    - task: AzureAppServiceSettings@1
      displayName: 'Configure Game Web Site'
      inputs:
        azureSubscription: '$(Azure.Subscription)'
        appName: '$(Resources.GameWebSiteResourceName)'
        resourceGroupName: '$(Resources.GameResourceGroupName)'
        appSettings: |
          [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "$(Environment)",
              "slotSetting": false
            },
            {
              "name": "IdentityAzureTable:IdentityConfiguration:StorageConnectionString",
              "value": "$(Game.WebSite.IdentityAzureTable.IdentityConfiguration.StorageConnectionString)",
              "slotSetting": false
            }
          ]

- stage: 'Test'
  displayName: 'Test'

  jobs:

  - job: 'TestCode'
    displayName: 'Test Code'

    steps:
    - checkout: none
